{"version":3,"file":"static/js/786.98ff3638.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://social/./src/components/Dialogs/DialogsItem/DialogsItem.module.css?e982","webpack://social/./src/components/Dialogs/DialogsItem/Item/Item.module.css?9458","components/Dialogs/DialogsItem/Item/Item.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","webpack://social/./src/components/Dialogs/Message/Message.module.css?72d0","webpack://social/./src/components/Dialogs/Message/Item/Item.module.css?0785","components/Dialogs/Message/Item/Item.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/MessageContainer.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__EEDqu\",\"dialogsItems\":\"Dialogs_dialogsItems__Rdmjp\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogsItem_dialogsItems__Tuj2R\"};","// extracted by mini-css-extract-plugin\nexport default {\"userImage\":\"Item_userImage__dEcKx\",\"item\":\"Item_item__2kSXt\",\"link\":\"Item_link__DPEvC\",\"active\":\"Item_active__ARaKO\",\"name\":\"Item_name__DPvJy\"};","import s from './Item.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    name: string\r\n    url: string\r\n}\r\n\r\nconst Item: React.FC<PropsType> = ({id, name, url}) => {\r\n    id = String(id);\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink className={({isActive}) => isActive ? s.active : s.link} to={id}>\r\n                <img className={s.userImage} src={url} alt=\"\"/>\r\n                <span className={s.name}>{name}</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","import s from './DialogsItem.module.css';\r\nimport React from \"react\";\r\nimport Item from \"./Item/Item\";\r\n\r\ntype DialogsType = {\r\n    id: string\r\n    name: string\r\n    url: string\r\n}\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>\r\n}\r\n\r\nconst DialogsItem:React.FC<PropsType> = ({dialogs}) => {\r\n    let dialogsElements = dialogs.map(dialog => <Item id={dialog.id} key={dialog.id} name={dialog.name} url={dialog.url} />);\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogsItem;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__h4u-I\",\"newMessageText\":\"Message_newMessageText__Mik8G\",\"sendButton\":\"Message_sendButton__Hth2n\"};","// extracted by mini-css-extract-plugin\nexport default {\"myItem\":\"Item_myItem__B4bC7\",\"otherItem\":\"Item_otherItem__ArdOF\"};","import s from './Item.module.css';\r\nimport React from \"react\";\r\n\r\ntype Propstype = {\r\n    senderId: number\r\n    message: string\r\n}\r\n\r\nconst Item: React.FC<Propstype> = ({senderId, message}) => {\r\n    return <div className={senderId === 1 ? s.myItem : s.otherItem}>{message}</div>\r\n}\r\n\r\nexport default Item;","import s from './Message.module.css'\r\nimport React from 'react'\r\nimport Item from './Item/Item'\r\nimport { SubmitErrorHandler, SubmitHandler, useForm } from 'react-hook-form'\r\nimport s2 from './../../common/FormsControls/FormControls.module.css'\r\n\r\ntype PropsType = {\r\n    sendMessage: (text: string) => void\r\n    messages: Array<MessagesType>\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n    senderId: number\r\n}\r\n\r\nconst Messages: React.FC<PropsType> = ({sendMessage, messages}) => {\r\n    let messagesElements = messages.map(message => <Item key={message.id} message={message.message} senderId={message.senderId} />)\r\n    interface MyForm {\r\n        text: string\r\n    }\r\n    const submit: SubmitHandler<MyForm> = values => {\r\n        sendMessage(values.text)\r\n        reset()\r\n    }\r\n    const error: SubmitErrorHandler<MyForm> = values => {\r\n        console.log(values)\r\n    }\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm<MyForm>({\r\n        defaultValues: {\r\n            text: ''\r\n        }\r\n    })\r\n    return (\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n            <form onSubmit={handleSubmit(submit, error)}>\r\n                <div className={s2.formControl + \" \" + (errors.text && s2.error)}>\r\n                    <textarea {...register('text', {required: true, maxLength: 20}) } className={s.newMessageText} />\r\n                    {errors.text && errors.text.type === 'required' && <span>Поле обязательно для заполнения</span>}\r\n                    {errors.text && errors.text.type === 'maxLength' && <span>Максимальная длина поля не более 150 символов</span>}\r\n                </div>\r\n                <button className={s.sendButton}>Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import Messages from \"./Message\";\r\nimport { sendMessage } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from \"../../../redux/store\";\r\nimport { resetForm } from '../../../redux/profile-reducer';\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {sendMessage, resetForm}) (Messages);\r\n\r\nexport default MessagesContainer;","import s from './Dialogs.module.css';\r\nimport React from \"react\";\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport MessagesContainer from './Message/MessageContainer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/store';\r\n\r\ntype PropsType = {\r\n    store: any\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = ({store}) => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <DialogsItem dialogs={store.getState().dialogsPage.dialogs} />\r\n            <MessagesContainer store={store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {}),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n}"],"names":["_ref","id","name","url","String","_jsx","className","s","children","_jsxs","NavLink","_ref2","isActive","to","src","alt","dialogsElements","dialogs","map","dialog","Item","senderId","message","sendMessage","messagesElements","messages","_useForm","useForm","defaultValues","text","register","handleSubmit","reset","errors","formState","onSubmit","values","console","log","s2","_objectSpread","required","maxLength","type","connect","state","dialogsPage","resetForm","Messages","compose","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","Navigate","React","store","DialogsItem","getState","MessagesContainer"],"sourceRoot":""}